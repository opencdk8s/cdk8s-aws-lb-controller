// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lb-controller 1`] = `
Array [
  Object {
    "apiVersion": "admissionregistration.k8s.io/v1beta1",
    "kind": "MutatingWebhookConfiguration",
    "metadata": Object {
      "annotations": Object {
        "cert-manager.io/inject-ca-from": "kube-system/aws-load-balancer-serving-cert",
      },
      "labels": Object {
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
      "name": "aws-load-balancer-webhook",
    },
    "webhooks": Array [
      Object {
        "clientConfig": Object {
          "caBundle": "Cg==",
          "service": Object {
            "name": "aws-load-balancer-webhook-service",
            "namespace": "kube-system",
            "path": "/mutate-v1-pod",
          },
        },
        "failurePolicy": "Fail",
        "name": "mpod.elbv2.k8s.aws",
        "namespaceSelector": Object {
          "matchExpressions": Array [
            Object {
              "key": "elbv2.k8s.aws/pod-readiness-gate-inject",
              "operator": "In",
              "values": Array [
                "enabled",
              ],
            },
          ],
        },
        "rules": Array [
          Object {
            "apiGroups": Array [
              "",
            ],
            "apiVersions": Array [
              "v1",
            ],
            "operations": Array [
              "CREATE",
            ],
            "resources": Array [
              "pods",
            ],
          },
        ],
        "sideEffects": "None",
      },
      Object {
        "clientConfig": Object {
          "caBundle": "Cg==",
          "service": Object {
            "name": "aws-load-balancer-webhook-service",
            "namespace": "kube-system",
            "path": "/mutate-elbv2-k8s-aws-v1beta1-targetgroupbinding",
          },
        },
        "failurePolicy": "Fail",
        "name": "mtargetgroupbinding.elbv2.k8s.aws",
        "rules": Array [
          Object {
            "apiGroups": Array [
              "elbv2.k8s.aws",
            ],
            "apiVersions": Array [
              "v1beta1",
            ],
            "operations": Array [
              "CREATE",
              "UPDATE",
            ],
            "resources": Array [
              "targetgroupbindings",
            ],
          },
        ],
        "sideEffects": "None",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
      "name": "aws-load-balancer-controller-leader-election-role",
      "namespace": "kube-system",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
        ],
        "verbs": Array [
          "create",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resourceNames": Array [
          "aws-load-balancer-controller-leader",
        ],
        "resources": Array [
          "configmaps",
        ],
        "verbs": Array [
          "get",
          "update",
          "patch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
      "name": "aws-load-balancer-controller-role",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "endpoints",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "namespaces",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods/status",
        ],
        "verbs": Array [
          "patch",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "patch",
          "update",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services/status",
        ],
        "verbs": Array [
          "patch",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "elbv2.k8s.aws",
        ],
        "resources": Array [
          "ingressclassparams",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "elbv2.k8s.aws",
        ],
        "resources": Array [
          "targetgroupbindings",
        ],
        "verbs": Array [
          "create",
          "delete",
          "get",
          "list",
          "patch",
          "update",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "elbv2.k8s.aws",
        ],
        "resources": Array [
          "targetgroupbindings/status",
        ],
        "verbs": Array [
          "patch",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "extensions",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "patch",
          "update",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "extensions",
        ],
        "resources": Array [
          "ingresses/status",
        ],
        "verbs": Array [
          "patch",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingressclasses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "patch",
          "update",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses/status",
        ],
        "verbs": Array [
          "patch",
          "update",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
      "name": "aws-load-balancer-controller-leader-election-rolebinding",
      "namespace": "kube-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "aws-load-balancer-controller-leader-election-role",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "aws-load-balancer-controller",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
      "name": "aws-load-balancer-controller-rolebinding",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "aws-load-balancer-controller-role",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "aws-load-balancer-controller",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
      "name": "aws-load-balancer-webhook-service",
      "namespace": "kube-system",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "port": 443,
          "targetPort": 9443,
        },
      ],
      "selector": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
      "name": "aws-load-balancer-controller",
      "namespace": "kube-system",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/name": "aws-load-balancer-controller",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/name": "aws-load-balancer-controller",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--ingress-class=alb",
                "--cluster-name=cluster",
              ],
              "image": "amazon/aws-alb-ingress-controller:v2.2.0",
              "livenessProbe": Object {
                "failureThreshold": 2,
                "httpGet": Object {
                  "path": "/healthz",
                  "port": 61779,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 10,
              },
              "name": "controller",
              "ports": Array [
                Object {
                  "containerPort": 9443,
                  "name": "webhook-server",
                  "protocol": "TCP",
                },
              ],
              "resources": Object {
                "limits": Object {
                  "cpu": "200m",
                  "memory": "500Mi",
                },
                "requests": Object {
                  "cpu": "100m",
                  "memory": "200Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                  "name": "cert",
                  "readOnly": true,
                },
              ],
            },
          ],
          "priorityClassName": "system-cluster-critical",
          "securityContext": Object {
            "fsGroup": 1337,
          },
          "serviceAccountName": "aws-load-balancer-controller",
          "terminationGracePeriodSeconds": 10,
          "volumes": Array [
            Object {
              "name": "cert",
              "secret": Object {
                "defaultMode": 420,
                "secretName": "aws-load-balancer-webhook-tls",
              },
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "cert-manager.io/v1alpha2",
    "kind": "Certificate",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
      "name": "aws-load-balancer-serving-cert",
      "namespace": "kube-system",
    },
    "spec": Object {
      "dnsNames": Array [
        "aws-load-balancer-webhook-service.kube-system.svc",
        "aws-load-balancer-webhook-service.kube-system.svc.cluster.local",
      ],
      "issuerRef": Object {
        "kind": "Issuer",
        "name": "aws-load-balancer-selfsigned-issuer",
      },
      "secretName": "aws-load-balancer-webhook-tls",
    },
  },
  Object {
    "apiVersion": "cert-manager.io/v1alpha2",
    "kind": "Issuer",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
      "name": "aws-load-balancer-selfsigned-issuer",
      "namespace": "kube-system",
    },
    "spec": Object {
      "selfSigned": Object {},
    },
  },
  Object {
    "apiVersion": "admissionregistration.k8s.io/v1beta1",
    "kind": "ValidatingWebhookConfiguration",
    "metadata": Object {
      "annotations": Object {
        "cert-manager.io/inject-ca-from": "kube-system/aws-load-balancer-serving-cert",
      },
      "labels": Object {
        "app.kubernetes.io/name": "aws-load-balancer-controller",
      },
      "name": "aws-load-balancer-webhook",
    },
    "webhooks": Array [
      Object {
        "clientConfig": Object {
          "caBundle": "Cg==",
          "service": Object {
            "name": "aws-load-balancer-webhook-service",
            "namespace": "kube-system",
            "path": "/validate-elbv2-k8s-aws-v1beta1-targetgroupbinding",
          },
        },
        "failurePolicy": "Fail",
        "name": "vtargetgroupbinding.elbv2.k8s.aws",
        "rules": Array [
          Object {
            "apiGroups": Array [
              "elbv2.k8s.aws",
            ],
            "apiVersions": Array [
              "v1beta1",
            ],
            "operations": Array [
              "CREATE",
              "UPDATE",
            ],
            "resources": Array [
              "targetgroupbindings",
            ],
          },
        ],
        "sideEffects": "None",
      },
    ],
  },
]
`;
